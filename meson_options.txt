option ('build_with_lto', type: 'boolean', value: 'false',
        description: 'build with link time optimization')
option ('build_with_pgo', type: 'boolean', value: 'false',
        description: 'build with profile optimization')
option ('build_with_native', type: 'boolean', value: 'false',
        description: 'build with native CPU instructions')

option ('enable_app', type: 'boolean', value: 'true',
        description: 'build with demo applications')
option ('enable_traces', type: 'boolean', value: 'true',
        description: 'use stdio messages in kfft lib')
option ('enable_simd', type: 'boolean', value: 'false',
        description: 'use SIMD optimized code')
option ('enable_alloca', type: 'boolean', value: 'false',
        description: 'use alloca for temporary buffers (dangerouse)')
option ('enable_sysmath', type: 'boolean', value: 'false',
        description: 'use system (or custom) defines and math functions')
option ('enable_fastmath', type: 'boolean', value: 'true',
        description: 'use -ffast-math optimization (maybe dangerouse)')
option ('enable_extended', type: 'boolean', value: 'true',
        description: 'enable extended algoritms (use generic algorithm for prime-lenght sequence)')
option ('enable_memless', type: 'boolean', value: 'false',
        description: 'use memory less mode (very slow)')
option ('enable_half_scalar', type: 'boolean', value: 'true',
        description: 'use float data type without double (by default). This option disable SIMD build.')
option ('enable_openmp', type: 'boolean', value: 'true',
        description: 'enable openmp parallel pragmas (uses 2d, sparse extensions)')

option ('list_extensions', type: 'array', value: ['2d', 'conv', 'conv2d', 'sparse'],
        description: 'enable extensions')
option ('list_vex86', type: 'array', choices: ['sse', 'avx', 'avx2'], value: ['sse'],
        description: 'enable vector extensioins support')
option ('enable_sse3', type: 'boolean', value: 'true',
        description: 'enable SSE3 along with SSE2 (any CPU don\'t support this, but it\'s faster)')

option ('build_library_api', type : 'combo', choices: ['export', 'import', 'none'], value: 'export',
        description: 'library API type')
option ('enable_dynamical_api', type: 'boolean', value: 'true',
        description: 'enable dynamicaly linked callbacks in build headers')

option ('limit_rader', type: 'integer', value: '25',
        description: 'barier use rader or generic algorithm')
option ('level_plan_max', type: 'integer', value: '7',
        description: 'max reqursive subplan level')
option ('level_bfly_max', type: 'integer', value: '5',
        description: 'max butterfly level')
# === TESTS options ===
option ('enable_tests', type: 'boolean', value: 'true',
        description: 'build with tests applications')
option ('speed_test_sequence_limit', type: 'integer', value: 100000,
        description: 'sequence limit parameter for speed test')
option ('speed_test_step', type: 'integer', value: 101,
        description: 'sequence step parameter for speed test')
option ('speed_test_with_plan', type: 'boolean', value: 'true',
        description: 'sequence step parameter for speed test')
option ('valide_test_limit', type: 'integer', value: 100000,
        description: 'sequence step parameter for speed test')
option ('valide_test_round', type: 'integer', value: 100,
        description: 'sequence step parameter for speed test')
